name: CICD

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Log in to the GitHub Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Define ENV vars
        run: |
          echo "API_IMAGE_TAG=ghcr.io/${{ github.actor }}/exceltable:${{ github.sha }}" >> $GITHUB_ENV
          echo "WEB_IMAGE_TAG=ghcr.io/${{ github.actor }}/exceltableweb:${{ github.sha }}" >> $GITHUB_ENV
          echo "DEPLOY_DIR=~/exceltable-compose" >> $GITHUB_ENV

      - name: Build and push API Docker image
        uses: docker/build-push-action@v6.5.0
        with:
          file: ExcelTable/Dockerfile
          context: .
          push: true
          tags: ${{ env.API_IMAGE_TAG }}

      - name: Build and push WEB Docker image
        uses: docker/build-push-action@v6.5.0
        with:
          file: excel-table-web/Dockerfile
          context: .
          push: true
          tags: ${{ env.WEB_IMAGE_TAG }}

      - name: Copy Compose Files to Droplet
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.DIGITALOCEAN_HOST }}
          username: ${{ secrets.DIGITALOCEAN_USER }}
          key: ${{ secrets.DIGITALOCEAN_SSH_KEY }}
          passphrase: ${{ secrets.DIGITALOCEAN_SSH_PASSPHRASE }}
          source: "compose.yaml,compose.prod.yaml"
          target: ${{ env.DEPLOY_DIR }}

      - name: Deploy to DigitalOcean
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.DIGITALOCEAN_HOST }}
          username: ${{ secrets.DIGITALOCEAN_USER }}
          key: ${{ secrets.DIGITALOCEAN_SSH_KEY }}
          passphrase: ${{ secrets.DIGITALOCEAN_SSH_PASSPHRASE }}
          script: |
            cd ${{ env.DEPLOY_DIR }}
            docker login ghcr.io -u ${{ github.actor }} -p ${{ secrets.GITHUB_TOKEN }}
            docker pull ${{ env.API_IMAGE_TAG }}
            docker pull ${{ env.WEB_IMAGE_TAG }}
            export EXCELTABLE_IMAGE=${{ env.API_IMAGE_TAG }}
            export EXCELTABLEWEB_IMAGE=${{ env.WEB_IMAGE_TAG }}
            docker-compose -f compose.yaml -f compose.prod.yaml down
            docker-compose -f compose.yaml -f compose.prod.yaml up -d
          
